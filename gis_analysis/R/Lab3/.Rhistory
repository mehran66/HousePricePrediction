mammals$LogBrainPct = log(mammals$BrainPct)
mammals$LogBrainPct = log(mammals$BrainPct)
mammals$LogBrainPct = log(mammals$BrainPct)
mammals$LogBrainPct = log(mammals$BrainPct)
hist(mammals$LogBrainPct, freq=FALSE)
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
dev.off(dev.list()["RStudioGD"])
mammals$LogBrainPct = log(mammals$BrainPct)
hist(mammals$LogBrainPct, freq=FALSE)
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
mammals$LogBrainPct
mammals$BrainPct
hist(mammals$BrainPct, freq=FALSE)
hist(mammals$BrainPct)
```{r }
mammals$LogBrainPct = log10(mammals$BrainPct)
hist(mammals$LogBrainPct, freq=FALSE)
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
```
mammals$LogBrainPct = log(mammals$BrainPct)
hist(mammals$LogBrainPct, freq=FALSE)
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
dnorm(x, mean=mu, sd=std)
x
dnorm(x, mean=mu, sd=std)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)
curve(dnorm(x, mean=mu, sd=std))
curve(dnorm(x, mean=mu, sd=std))
cor(mammals$LifeSpan, mammals$Gestation, use = "complete.obs", method = "pearson")
cor(mammals$LifeSpan, mammals$Gestation, use = "complete.obs", method =  "kendall")
cor(mammals$LifeSpan, mammals$Gestation, use = "complete.obs", method = "spearman")
MammalsSubset = data.frame(TotalSleep = mammals$TotalSleep, BodyWt = mammals$BodyWt, BrainWt = mammals$BrainWt, LifeSpan = mammals$LifeSpan, Gestation = mammals$Gestation)
#BrainWt or percentage of thant????
# ask your method is acceptable or not
MammalsSubset_corr = cor(MammalsSubset, use = "complete.obs") # get correlations
library('corrplot') #package corrplot
corrplot(MammalsSubset_corr, method = "circle", addCoef.col = "black") #plot matrix
# Use "Pairs Plot" from "psych" package to visualize scatter plot
library("psych")
Mammals[sapply(x,is.numeric)]
mammals[sapply(x,is.numeric)]
df[sapply(mammals,is.numeric)]
str(mammals)
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation)]
mammals
mammals
mammals
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation),]
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation),:]
mammals[:,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation)]
#BrainWt or percentage of thant????
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation)]
subset(c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation))
mammal[,sapply(mmamls, is.numeric)]
mammals[,sapply(mammals, is.numeric)]
mammals[,sapply(c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation), is.numeric)]
mammals(,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation))
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation)]
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation]
mammals[,c(mammals$TotalSleep, mammals$BodyWt, mammals$BrainWt, mammals$LifeSpan, mammals$Gestation]
mammals[,sapply(mammals, is.numeric)]
MammalsSubset_corr = cor(MammalsSubset, use = "complete.obs") # get correlations
MammalsSubset_corr
MammalsSubset_corr = cor(MammalsSubset, use = "complete.obs", method = "pearson") # get correlations
MammalsSubset_corr
library('corrplot') #package corrplot
corrplot(MammalsSubset_corr, method = "circle", addCoef.col = "black") #plot matrix
# Use "Pairs Plot" from "psych" package to visualize scatter plot
library("psych")
pairs.panels(MammalsSubset, gap = 0)
library('corrplot') #package corrplot
corrplot(MammalsSubset_corr, method = "circle", addCoef.col = "black") #plot matrix
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt)
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
summary(Sleep_BodyWt.lm)$r.squared
summary(Sleep_BodyWt.lm)
plot(mammals$BodyWt, mammals$TotalSleep,
main = "XXXX",
xlab = "XXX",
ylab = "YYY",
pch = 20,
col = "grey")
# Add fit lines
# Linear regression line (y ~ x)
abline(Sleep_BodyWt.lm, col="red")
plot (Sleep_BodyWt.lm)
par(mfrow=c(2,2))
plot (Sleep_BodyWt.lm)
summary(Sleep_BodyWt.lm)$r.squared
# what shoud I do with NA; there are many NA in mammals$TotalSleep
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt, use = "complete.obs")
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
plot(mammals$BodyWt, mammals$TotalSleep,
main = "XXXX",
xlab = "XXX",
ylab = "YYY",
pch = 20,
col = "grey")
# Add fit lines
# Linear regression line (y ~ x)
abline(Sleep_BodyWt.lm, col="red")
# Residual Plot
Sleep_BodyWt.res = resid(Sleep_BodyWt.lm)
plot(mammals$BodyWt[1:58], as.vector(Sleep_BodyWt.res),
ylab="Residuals",
xlab="BodyWt",
main="XXX")
abline(0, 0) # the horizon
Sleep_BodyWt.res = resid(Sleep_BodyWt.lm)
plot(mammals$BodyWt, as.vector(Sleep_BodyWt.res),
ylab="Residuals",
xlab="BodyWt",
main="XXX", use = "complete.obs")
summary(Sleep_BodyWt.lm)
# Residual Plot
Sleep_BodyWt.res = resid(Sleep_BodyWt.lm)
plot(mammals$BodyWt[1:58], as.vector(Sleep_BodyWt.res),
ylab="Residuals",
xlab="BodyWt",
main="XXX")
abline(0, 0) # the horizon
MultiReg.lm = lm(mammals$TotalSleep ~ mammals$BodyWt + mammals$BrainWt + mammals$LifeSpan + mammals$Gestation)
summary(MultiReg.lm)
plot (Sleep_BodyWt.lm)
summary(Sleep_BodyWt.lm)
plot(mammals$BrainWt, mammals$TotalSleep,
main = "XXXX",
xlab = "XXX",
ylab = "YYY",
pch = 20,
col = "grey")
# Add fit lines
# Linear regression line (y ~ x)
abline(Sleep_BodyWt.lm, col="red")
test = data.frame(mammals$TotalSleep, mammals$BodyWt)
test2= [test&TotalSleep > quantile(test&TotalSleep, .25) - 1.5*IQR(test&TotalSleep) & test&TotalSleep < quantile(test&TotalSleep, .75) + 1.5*IQR(test&TotalSleep),]
test = data.frame(mammals$TotalSleep, mammals$BodyWt)
test2 = test[test&TotalSleep > quantile(test&TotalSleep, .25) - 1.5*IQR(test&TotalSleep) & test&TotalSleep < quantile(test&TotalSleep, .75) + 1.5*IQR(test&TotalSleep),]
test = data.frame(TotalSleep=mammals$TotalSleep, BodyWt=mammals$BodyWt)
test2 = test[test&TotalSleep > quantile(test&TotalSleep, .25) - 1.5*IQR(test&TotalSleep) & test&TotalSleep < quantile(test&TotalSleep, .75) + 1.5*IQR(test&TotalSleep),]
test
test = data.frame(TotalSleep=mammals$TotalSleep, BodyWt=mammals$BodyWt)
test2 = test[test$TotalSleep > quantile(test$TotalSleep, .25) - 1.5*IQR(test$TotalSleep) & test$TotalSleep < quantile(test$TotalSleep, .75) + 1.5*IQR(test$TotalSleep),]
test = na.omit(data.frame(TotalSleep=mammals$TotalSleep, BodyWt=mammals$BodyWt))
test2 = test[test$TotalSleep > quantile(test$TotalSleep, .25) - 1.5*IQR(test$TotalSleep) & test$TotalSleep < quantile(test$TotalSleep, .75) + 1.5*IQR(test$TotalSleep),]
```
test2
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
test = na.omit(data.frame(TotalSleep=mammals$TotalSleep, BodyWt=mammals$BodyWt))
test2 = test[test$TotalSleep > quantile(test$TotalSleep, .25) - 1.5*IQR(test$TotalSleep) & test$TotalSleep < quantile(test$TotalSleep, .75) + 1.5*IQR(test$TotalSleep) & test$BodyWt > quantile(test$BodyWt, .25) - 1.5*IQR(test$BodyWt) & test$BodyWt < quantile(test$BodyWt, .75) + 1.5*IQR(test$BodyWt),]
```
test = na.omit(data.frame(TotalSleep=mammals$TotalSleep, BodyWt=mammals$BodyWt))
test2 = test[test$TotalSleep > quantile(test$TotalSleep, .25) - 1.5*IQR(test$TotalSleep) & test$TotalSleep < quantile(test$TotalSleep, .75) + 1.5*IQR(test$TotalSleep) & test$BodyWt > quantile(test$BodyWt, .25) - 1.5*IQR(test$BodyWt) & test$BodyWt < quantile(test$BodyWt, .75) + 1.5*IQR(test$BodyWt),]
Sleep_BodyWt.lm = lm(test2$TotalSleep ~ test2$BodyWt)
syummary(test2)
summary(test2)
summary(Sleep_BodyWt.lm)
plot(test2$BodyWt, test2$TotalSleep,
main = "XXXX",
xlab = "XXX",
ylab = "YYY",
pch = 20,
col = "grey")
# Add fit lines
# Linear regression line (y ~ x)
abline(Sleep_BodyWt.lm, col="red")
HighestBrainPct = mammals[mammals$BrainPct == max(mammals$BrainPct), "Species"]
print(HighestBrainPct)
# the mean of BrainPct
MeanBrainPct = mean(mammals$BrainPct)
print(MeanBrainPct)
# the median of BrainPct
MedianBrainPct = median(mammals$BrainPct)
print(MedianBrainPct)
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage")
plot(density(mammals$BrainPct), col="gray", , main = "density plot of Brain percentage")
boxplot(mammals$BrainPct, col="gray", , main = "Boxplot of Brain percentage")
# vioplot is a combination of a density plot and a box plot
library(vioplot)
vioplot(mammals$BrainPct, col="gray", , main = "Vioplot of Brain percentage")
```
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage")
plot(density(mammals$BrainPct), col="gray", , main = "density plot of Brain percentage")
boxplot(mammals$BrainPct, col="gray", main = "Boxplot of Brain percentage")
# vioplot is a combination of a density plot and a box plot
library(vioplot)
vioplot(mammals$BrainPct, col="gray", main = "Vioplot of Brain percentage")
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage")
plot(density(mammals$BrainPct), col="gray", , main = "density plot of Brain percentage")
boxplot(mammals$BrainPct, col="gray", main = "Boxplot of Brain percentage")
# vioplot is a combination of a density plot and a box plot
library(vioplot)
vioplot(mammals$BrainPct, col="gray")
title (main = "Vioplot of Brain percentage")
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage", xlab = "rain percentage")
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage", xlab = "Brain percentage")
plot(density(mammals$BrainPct), col="gray", main = "Density plot of Brain percentage", xlab = "Brain percentage")
boxplot(mammals$BrainPct, col="gray", main = "Boxplot of Brain percentage", xlab = "Brain percentage")
# vioplot is a combination of a density plot and a box plot
library(vioplot)
vioplot(mammals$BrainPct, col="gray", xlab = "Brain percentage")
title (main = "Vioplot of Brain percentage")
vioplot(mammals$BrainPct, col="gray")
title (main = "Vioplot of Brain percentage", xlab = "Brain percentage")
```{r, echo=FALSE, fig.align='center'}
# distribution of BrainPct
par(mfrow=c(2,2))
hist(mammals$BrainPct, col="gray", main = "Histgram of Brain percentage", xlab = "Brain percentage")
plot(density(mammals$BrainPct), col="gray", main = "Density plot of Brain percentage", xlab = "Brain percentage")
boxplot(mammals$BrainPct, col="gray", main = "Boxplot of Brain percentage", ylab = "Brain percentage")
# vioplot is a combination of a density plot and a box plot
library(vioplot)
vioplot(mammals$BrainPct, col="gray")
title (main = "Vioplot of Brain percentage", ylab = "Brain percentage")
mammals$BrainPct
```{r}
library(moments)
skewness(mammals$BrainPct)
# The skewness here is 1.315525 or 1.283827. This value implies that the         distribution of the data isskewed to the right or positively skewed.
3. Create a scatterplot with `LifeSpan` on the y-axis and `Gestation` on the x-axis.
```{r}
plot(mammals$Gestation, mammals$LifeSpan,
xlab = "Gestation",
ylab = "LifeSpan",
pch = 20,
col = "grey")
```
4.	Generate a boxplot that compares body weight across the five `Danger` levels.
```{r, fig.align='center'}
boxplot(mammals$BodyWt ~ mammals$Danger,
col = "beige",
xlab = "Danger Level = 1",
ylab = "Body Weight", outline =F)
means = aggregate(BodyWt~Danger,data=mammals,FUN="mean", outline =F)
par(new=T)
points(means, col="red",pch=18)
4.	Generate a boxplot that compares body weight across the five `Danger` levels.
```{r, fig.align='center'}
boxplot(mammals$BodyWt ~ mammals$Danger,
col = "beige",
xlab = "Danger Level",
ylab = "Body Weight", outline =F)
# The outliers have benn eliminated
# ploting the mean of each group
means = aggregate(BodyWt~Danger,data=mammals,FUN="mean", outline =F)
par(new=T)
points(means, col="red",pch=18)
```{r, fig.align='center'}
boxplot(mammals$TotalSleep ~ mammals$Danger,
col = "beige",
xlab = "Danger Level",
ylab = "Total Sleep",
outline=FALSE)
# The outliers have benn eliminated
# ploting the mean of each group
means = aggregate(TotalSleep~Danger,data=mammals,FUN="mean", outline =F)
par(new=T)
points(means, col="red",pch=18)
```
4.	Generate a boxplot that compares body weight across the five `Danger` levels.
```{r, fig.align='center'}
3. Create a scatterplot with `LifeSpan` on the y-axis and `Gestation` on the x-axis.
```{r, fig.align='center'}
plot(mammals$Gestation, mammals$LifeSpan,
xlab = "Gestation",
ylab = "LifeSpan",
pch = 20,
col = "grey")
```
4.	Generate a boxplot that compares body weight across the five `Danger` levels.
```{r, fig.align='center'}
boxplot(mammals$BodyWt ~ mammals$Danger,
col = "beige",
xlab = "Danger Level",
ylab = "Body Weight", outline =F)
# The outliers have benn eliminated
# ploting the mean of each group
means = aggregate(BodyWt~Danger,data=mammals,FUN="mean", outline =F)
par(new=T)
points(means, col="red",pch=18)
```
* Finally, create a boxplot that compares `TotalSleep` across the five `Danger` levels.
```{r, fig.align='center'}
boxplot(mammals$TotalSleep ~ mammals$Danger,
col = "beige",
xlab = "Danger Level",
ylab = "Total Sleep",
outline=FALSE)
# The outliers have benn eliminated
# ploting the mean of each group
means = aggregate(TotalSleep~Danger,data=mammals,FUN="mean", outline =F)
par(new=T)
points(means, col="red",pch=18)
```
* What inferences can you make about the sleeping conditions of an animal from this box plot?
```{r}
# From the the trend of mean and median, we can conclude that there is as indirect relationship between total sleep and denger level. So those mamals that are more under dengel, sleep less. Also the variation if total sleep decreases as the danger level index increase.
```
## Data Transformations
5.	Log-transform the `BrainPct` data and save it as a new variable `LogBrainPct`.
```{r}
# Show your R code here
```{r}
mammals$LogBrainPct = log(mammals$BrainPct)
```
* Plot the histogram of `LogBrainPct` with a normal curve added (Hint: you'll want to use `freq=FALSE` in your `hist` function to plot densities instead of frequencies).
```{r eval=FALSE}
hist(mammals$LogBrainPct, freq=FALSE)
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
* Plot the histogram of `LogBrainPct` with a normal curve added (Hint: you'll want to use `freq=FALSE` in your `hist` function to plot densities instead of frequencies).
```{r, fig.align='center' }
hist(mammals$LogBrainPct, freq=FALSE, xlab = "Log (Brain Percentage)")
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
* Plot the histogram of `LogBrainPct` with a normal curve added (Hint: you'll want to use `freq=FALSE` in your `hist` function to plot densities instead of frequencies).
```{r, fig.align='center' }
hist(mammals$LogBrainPct, freq=FALSE, xlab = "Log (Brain Percentage)", main = "Logarithmic Histogram of Brain Percentage")
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE)  # Add curve to plot
MammalsSubset[,sapply(MammalsSubset, is.numeric)]
MammalsSubset
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt)
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt)
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
summary(Sleep_BodyWt.lm)
MammalsSubset_corr = cor(MammalsSubset, use = "complete.obs", method = "pearson") # get correlations
library('corrplot') #package corrplot
corrplot(MammalsSubset_corr, method = "circle", addCoef.col = "black") #plot matrix
# Use "Pairs Plot" from "psych" package to visualize scatter plot
Sleep_BrainWt.lm = lm(mammals$TotalSleep ~ mammals$BrainWt)
coeffs = coefficients(Sleep_BrainWt.lm); coeffs
summary(Sleep_BodyWt.lm)
```{r}
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt)
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
```
* What is the regression equation ($y = \beta_0 + \beta_1 x_1$)?
```{r}
# β0 = 10.835131637
# β1 = -0.001524093
# TotalSleep = 10.835131637 + (-0.001524093) BodyWt
```
* Is `BodyWt` a significant predictor of `TotalSleep`? What evidence do you have to support this?
```{r}
summary(Sleep_BodyWt.lm)
```{r}
Sleep_BrainWt.lm = lm(mammals$TotalSleep ~ mammals$BrainWt)
coeffs = coefficients(Sleep_BrainWt.lm); coeffs
```
* What is the regression equation ($y = \beta_0 + \beta_1 x_1$)?
```{r}
# β0 = 11.016324028
# β1 = -0.001719468
# TotalSleep = 11.016324028  + (-0.001719468) BodyWt
```
* Is `BrainWt` a significant predictor of `TotalSleep`? What evidence do you have to support this?
```{r}
summary(Sleep_BodyWt.lm)
Sleep_BrainWt.lm = lm(mammals$TotalSleep ~ mammals$BrainWt)
coeffs = coefficients(Sleep_BrainWt.lm); coeffs
```
* What is the regression equation ($y = \beta_0 + \beta_1 x_1$)?
```{r}
# β0 = 11.016324028
# β1 = -0.001719468
# TotalSleep = 11.016324028  + (-0.001719468) BodyWt
```
* Is `BrainWt` a significant predictor of `TotalSleep`? What evidence do you have to support this?
```{r}
summary(Sleep_BrainWt.lm)
* Create a scatterplot for the model and add the regression line to the plot.
```{r, fig.align='center'}
plot(mammals$BrainWt, mammals$TotalSleep,
main = "linear regression model",
xlab = "BrainWt",
ylab = "TotalSleep",
pch = 20,
col = "grey")
# Add fit lines
# Linear regression line (y ~ x)
abline(Sleep_BrainWt.lm, col="red")
par(mfrow=c(2,2))
plot (Sleep_BrainWt.lm) # linear regression model built-in plots
MultiReg.lm = lm(mammals$TotalSleep ~ mammals$BodyWt + mammals$BrainWt + mammals$LifeSpan + mammals$Gestation)
```
summary(MultiReg.lm)
Sleep_BodyWt.lm = lm(mammals$TotalSleep ~ mammals$BodyWt)
coeffs = coefficients(Sleep_BodyWt.lm); coeffs
```
* What is the regression equation ($y = \beta_0 + \beta_1 x_1$)?
```{r}
# β0 = 10.835131637
# β1 = -0.001524093
# TotalSleep = 10.835131637 + (-0.001524093) BodyWt
```
* Is `BodyWt` a significant predictor of `TotalSleep`? What evidence do you have to support this?
```{r}
summary(Sleep_BodyWt.lm)
Sleep_BrainWt.lm = lm(mammals$TotalSleep ~ mammals$BrainWt)
coeffs = coefficients(Sleep_BrainWt.lm); coeffs
```
* What is the regression equation ($y = \beta_0 + \beta_1 x_1$)?
```{r}
# β0 = 11.016324028
# β1 = -0.001719468
# TotalSleep = 11.016324028  + (-0.001719468) BodyWt
```
* Is `BrainWt` a significant predictor of `TotalSleep`? What evidence do you have to support this?
```{r}
summary(Sleep_BrainWt.lm)
summary(MultiReg.lm)
abline(lm(mammals$Gestation, mammals$LifeSpan), col="red")
# Yes, from plot in question 3, it was clear that there is a positive linear relationship between these two variables.
plot(mammals$Gestation, mammals$LifeSpan,
xlab = "Gestation",
ylab = "LifeSpan",
pch = 20,
col = "grey")
abline(lm(mammals$Gestation, mammals$LifeSpan), col="red")
plot(mammals$Gestation, mammals$LifeSpan,
xlab = "Gestation",
ylab = "LifeSpan",
pch = 20,
col = "grey")
abline(lm(mammals$LifeSpan ~ mammals$Gestation), col="red")
cor(mammals$TotalSleep , mammals$BodyWt, use = "complete.obs", method = "pearson") # pearson method
cor(mammals$TotalSleep , mammals$BrainWt, use = "complete.obs", method = "pearson") # pearson method
mammals = read.table("Data/SleepMammals.txt", header=TRUE)
mammals$BrainPct = mammals$BrainWt / (mammals$BodyWt * 1000)
mammals$Predation = as.factor(mammals$Predation)
mammals$Exposure = as.factor(mammals$Exposure)
```
* Which animal has the highest `BrainPct`?
```{r}
which.max(mammals$BrainPct)
mammals$Species[27]
```{r}
which.min(mammals$BrainPct)
mammals$Species[1]
```
* What is the mean and median of `BrainPct`?
```{r}
mean(mammals$BrainPct)
median(mammals$BrainPct)
```
2. Take a look at the distribution of `BrainPct` by plotting a histogram.
* Try to produce an alternative plot (or two) that might also help you explore the overall distribution of this variable.
```{r}
hist(mammals$BrainPct)
hist(mammals$BrainPct, breaks = 20,col = "orangered", main = "Distribution of percent brain weight", xlab = "Percent Brain Weight",)
hist(mammals$BrainPct, breaks = 20, freq=FALSE, col = "palevioletred", main = "Distribution of percent brain weight", xlab = "Percent Brain Weight",)
library(moments)
skewness(mammals$BrainPct)
```{r}
boxplot(BodyWt ~ Danger, data=mammals,outline=FALSE, col="peachpuff", main="Effect of Risk on Body Weight", ylab= "Body weight", xlab= "Danger")
```
* Finally, create a boxplot that compares `TotalSleep` across the five `Danger` levels.
```{r}
boxplot(TotalSleep ~ Danger, data=mammals, col= "darkseagreen", main= "Effect of Risk on Sleep", ylab="Total Sleep", xlab= "Danger")
```
```{r}
mammals$LogBrainPct =  log(mammals$BrainPct, base=10)
LogBrainPct =  log(mammals$BrainPct, base=10)
```
* Plot the histogram of `LogBrainPct` with a normal curve added (Hint: you'll want to use `freq=FALSE` in your `hist` function to plot densities instead of frequencies).
```{r}
h = hist(LogBrainPct)
plot(h,freq=FALSE, col="lightsteelblue")
mu = mean(mammals$LogBrainPct)
std = sd(mammals$LogBrainPct)
curve(dnorm(x, mean=mu, sd=std), add=TRUE, col="firebrick")
```
6. Discussion Question:
* What property of a data distribution are you attempting to change by taking the logarithm? Why do you think this is a useful thing to do? You'll need to refer to the literature and Google to answer this question.
cor(mammals$LifeSpan, mammals$Gestation, use="complete.obs")
#Maybe, when the data is centered near the origin it can be fifficult to tell if there is heteroscedcity occuring.
```
8. Compute the correlation matrix between total sleep, body weight, brain weight, life span and gestation. You'll need to subset your dataset to include only the above variables (Aside: you can get a `data.frame` with *only* `numeric` variables by using `df[sapply(x, is.numeric)]`).
```{r}
Subset <- c("LifeSpan", "Gestation", "BrainWt", "BodyWt", "TotalSleep")
newdata <- mammals[Subset]
cor(newdata, use="complete.obs", method="pearson")
```
* Based on Pearson's correlation coefficient, which two variables are *most* and *least* correlated with each-other?
